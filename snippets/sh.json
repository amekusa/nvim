{
  "\"${BASH_REMATCH[n]}\"": {
    "body": "\"${BASH_REMATCH[${1:1}]}\"",
    "prefix": "\"${BASH_REMATCH[n]}\""
  },
  "#!/usr/bin/env": {
    "body": "#!/usr/bin/env $0",
    "prefix": "#!/usr/bin/env"
  },
  "&> /dev/null + suppress + silent": {
    "body": "&> /dev/null",
    "prefix": [
      "&> /dev/null",
      "suppress",
      "silent"
    ]
  },
  "[[ regex_match ]]": {
    "body": "[[ \"$${1:var}\" =~ ${2:regex} ]]",
    "prefix": "[[ regex_match ]]"
  },
  "[[:space:]] + regex space": {
    "body": "[[:space:]]",
    "prefix": [
      "[[:space:]]",
      "regex space"
    ]
  },
  "array item + array element": {
    "body": "\"\\${${1:arr}[${2:0}]}\"",
    "prefix": [
      "array item",
      "array element"
    ]
  },
  "array length": {
    "body": "\"\\${#${1:arr}[@]}\"",
    "prefix": "array length"
  },
  "case": {
    "body": [
      "case \"$${1:var}\" in",
      "${2:x})",
      "\t$0",
      "\t;;",
      "esac"
    ],
    "prefix": "case"
  },
  "case args": {
    "body": [
      "case \"\\$1\" in",
      "-$1)",
      "\t$0",
      "\t;;",
      "-*)",
      "\techo \"invalid argument '\\$1'\"",
      "\t;;",
      "esac"
    ],
    "prefix": "case args"
  },
  "case-1": {
    "body": [
      "case \"\\$${1:var}\" in",
      "$2) $0;;",
      "esac"
    ],
    "prefix": "case"
  },
  "command -v \"cmd\" &> /dev/null + hascommand": {
    "body": "command -v \"$1\" &> /dev/null",
    "prefix": [
      "command -v \"cmd\" &> /dev/null",
      "hascommand"
    ]
  },
  "date hms": {
    "body": "date +'%H:%M:%S'",
    "prefix": "date hms"
  },
  "date ymd": {
    "body": "date +%F",
    "prefix": "date ymd"
  },
  "date ymd hms": {
    "body": "date +'%F %H:%M:%S'",
    "prefix": "date ymd hms"
  },
  "echo var + debug": {
    "body": "echo \"[DBG] ${1:var}: \\$$1\"",
    "prefix": [
      "echo var",
      "debug"
    ]
  },
  "for args": {
    "body": [
      "for ${1:arg} in \"$@\"; do",
      "\t$0",
      "done"
    ],
    "prefix": "for args"
  },
  "for array": {
    "body": [
      "for ${1:each} in \"${${2:arr}[@]}\"; do",
      "\t$0",
      "done"
    ],
    "prefix": "for array"
  },
  "for array index": {
    "body": [
      "for ${1:i} in \"${!${2:arr}[@]}\"; do",
      "\t$0\"${${2}[$${1}]}\"",
      "done"
    ],
    "prefix": "for array index"
  },
  "heredoc": {
    "body": [
      "cat <<- EOF",
      "$0",
      "EOF"
    ],
    "prefix": "heredoc"
  },
  "if": {
    "body": [
      "if ${1:cond}; then",
      "\t$0",
      "fi"
    ],
    "prefix": "if"
  },
  "prompt": {
    "body": [
      "while true; do",
      "\tread -n 1 -p \"${1:msg}? (Y/N) \" ${2:answer}; echo",
      "\tcase \"$${2:answer}\" in",
      "\t[Yy])",
      "\t\t$3",
      "\t\t;;",
      "\t[Nn])",
      "\t\t$4",
      "\t\t;;",
      "\t*) echo \"Type Y or N\" ;;",
      "\tesac",
      "done"
    ],
    "prefix": "prompt"
  },
  "read line by line + while read line": {
    "body": [
      "local IFS line",
      "while IFS= read -r line; do",
      "\t$0",
      "done < ${1:file}"
    ],
    "prefix": [
      "read line by line",
      "while read line"
    ]
  },
  "substring": {
    "body": "\"\\${${1:var}:${2:1}}\"",
    "prefix": "substring"
  },
  "usage + help": {
    "body": [
      "if [ -z \"\\$1\" ] || [ \"\\$1\" = \"--help\" ] || [ \"\\$1\" = \"-h\" ]; then",
      "\tcat <<- EOF",
      "\tUsage:",
      "\t  \\$0 ${1:args}",
      "\tEOF",
      "\treturn 1",
      "fi$0"
    ],
    "prefix": [
      "usage",
      "help"
    ]
  },
  "while args": {
    "body": [
      "while [ $# -gt 0 ]; do",
      "\t$0",
      "\tshift",
      "done"
    ],
    "prefix": "while args"
  }
}
